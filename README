== QUEUETASTIC ==

  * Queuetastic is an Asterisk Queue Reporting, Analysis, and Real-time Monitoring tool designed with the Ruby on Rails framework.

  * Copyright (c) 2008 Jayson Vaughn (vaughn.jayson@gmail.com)
  * Distributed under the terms of the GNU General Public License.
  * thanks to the rubyists.   http://rubyists.com
  * Wiki - http://trac.rubyists.com/trac.fcgi/queuetastic/wiki/queuetastic
  * Github - http://github.com/thedonvaughn/queuetastic/


== FEATURES ==

  * Real-time, live view, of Asterisk queues updated seamlessly using AJAX
  * Stats are exported in real-time using the Asterisk Manager Interface
  * Load Asterisk's queue log file into a database for reporting and analysis.
  * Able to run reports on Queue stats, agent stats, and "agent groups" stats.
  * Export reports in csv format


== REQUIREMENTS ==

  * Ruby 1.8
  * Rubygems
  * Ruby on Rails - 2.1+
  * FasterCSV gem
  * Asterisk 1.4


== SETUP ASTERISK ==

  Make sure that the Asterisk Manager Interface is enabled.

  1) Open /etc/asterisk/manager.conf and make sure the following is set:
      enabled = yes
      port = 5038 
      bindaddr = 0.0.0.0

  NOTE: 5038 is the default port.  You can change 0.0.0.0 to a specific IP address to bind to.  You will need to tell Queuetastic these settings later.

  2) Add yourself a user at the end of /etc/asterisk/manager.conf.  Here is an example:

    [queuemanager]
    secret = secret420
    deny=0.0.0.0/0.0.0.0
    permit=192.168.1.0/255.255.255.0
    read = system,call,log,verbose,command,agent,user,config
    write = system,call,log,verbose,command,agent,user,config

  NOTE: 'queuemanager' is the username and 'secret420' is the password. You will need to tell Queuetastic these settings later.
  This example denys anyone outside 192.168.1.0/24.   Refer to Asterisk documentation for further information.

  3) You must reload the manager module by either restarting asterisk or 'module reload manager' from within the Asterisk CLI.  Refer to Asterisk documentation for further information.


== INSTALL AND SETUP QUEUETASTIC ==

  1) Inside the working directory of your choosing issue: 
     `git clone git://github.com/thedonvaughn/queuetastic.git queuetastic`
  
  2) Make sure you have the fastercsv gem installed by either typing:
    'gem install fastercsv' 
      or 
    'rake gems:install' from within the queuetastic/ working directory.
  
  3) For your initial setup of Queuetastic, I suggest you edit config/queuetastic.yml by hand before starting Queuetastic.
     * `cd queuetastic/` if you are not already in the queuetastic working directory
     * Edit config/queuetastic.yml with your asterisk settings.  Note the service_level setting is only for reporting and won't actually set the servicelevel for Asterisk's queues.conf
     * After your first setup, you can change your config on the fly from within Queuetastic.
  
  4) Setup the database and deploy the app as you would any other Ruby on Rails application.  
     * Make sure to setup config/database.yml and issue 'rake db:migrate'.  
     * (Deploying a Rails app is way beyond the scope of this README, please consult the nice Rails community for documentation and/or suggestions.)
  
  5) Create a crontab entry to ensure the Asterisk queue_log is loaded to the database nightly.
     * create a crontab entry like the following example below.  This crontab entry will call reset_queue.rb everynight at 11:30pm.  Make sure to change /home/user/queuetastic to your actual install path.
     
     30 23 * * * cd /home/user/queuetastic/ && /home/user/queuetastic/bin/reset_queue.rb >> /home/user/queutastic/log/queuetastic.log
     
     * NOTE: You must create this crontab entry under the same user this app will run as.
     
  *** I use lighttpd + fcgi processes for Rails deployment***
  *** Use 'emash' to quickly setup and deploy this app for lighttpd.  
  *** http://rubyists.com/pages/emash
